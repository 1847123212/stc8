C51 COMPILER V9.56.0.0   LED1602                                                           10/05/2017 17:53:02 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LED1602
OBJECT MODULE PLACED IN led1602.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE led1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "led1602.h"
   2          
   3          void delay(void)
   4          {
   5   1        _nop_();
   6   1        _nop_();
   7   1        _nop_();
   8   1        _nop_();
   9   1        _nop_();
  10   1        _nop_();
  11   1      } 
  12          void lcdwait()
  13          {
  14   1        LCD1602_DB=0xFF;
  15   1        delay();
  16   1        LCD1602_RS=0;
  17   1        LCD1602_RW=1;
  18   1        LCD1602_E=1;
  19   1        while(LCD1602_DB & 0x80);
  20   1        LCD1602_E=0;
  21   1      }
  22          
  23          void lcdwritecmd(unsigned char cmd)
  24          {
  25   1        lcdwait();
  26   1        delay();
  27   1        LCD1602_RS=0;
  28   1        LCD1602_RW=0;
  29   1        LCD1602_DB=cmd;
  30   1        LCD1602_E=1;
  31   1        delay();
  32   1        LCD1602_E=0;
  33   1      }
  34          
  35          void lcdwritedata(unsigned char dat)
  36          {
  37   1        lcdwait();
  38   1        delay();
  39   1        LCD1602_RS=1;
  40   1        LCD1602_RW=0;
  41   1        LCD1602_DB=dat;
  42   1        LCD1602_E=1;
  43   1        delay();
  44   1        LCD1602_E=0;
  45   1      }
  46          
  47          void lcdinit()
  48          {
  49   1        lcdwritecmd(0x38);
  50   1        lcdwritecmd(0x0c);
  51   1        lcdwritecmd(0x06);
  52   1        lcdwritecmd(0x01);
  53   1      }
  54          
  55          void lcdsetcursor(unsigned char x, unsigned char y)
C51 COMPILER V9.56.0.0   LED1602                                                           10/05/2017 17:53:02 PAGE 2   

  56          {
  57   1        unsigned char address;
  58   1        if(y==0)
  59   1          address=0x00+x;
  60   1        else
  61   1          address=0x40+x;
  62   1        lcdwritecmd(address|0x80);
  63   1      }
  64          
  65          void lcdshowstr(unsigned char x, unsigned char y,
  66                          unsigned char *str)
  67          {
  68   1        lcdsetcursor(x,y);
  69   1        while((*str)!='\0') 
  70   1        {
  71   2           lcdwritedata(*str);
  72   2           str++;
  73   2        }
  74   1      }       
  75          
  76          void set_P0_mode(u8 a,u8 b)
  77          {
  78   1         P0M0=a;
  79   1         P0M1=b;
  80   1      }
  81          void set_P2_mode(u8 a,u8 b)
  82          {
  83   1         P2M0=a;
  84   1         P2M1=b;
  85   1      }
  86          
  87          void clear_adc_result(void)
  88          {
  89   1        ADC_RES=0x00;
  90   1        ADC_RESL=0x00;
  91   1      }
  92          
  93          void adc_power_on(void)
  94          {
  95   1         ADC_CONTR=0x80;
  96   1      }
  97          
  98          void adc_start(void)
  99          {
 100   1        ADC_CONTR|=0x40;
 101   1      }
 102          
 103          
 104          void set_adc_channel(u8 ch)
 105          {
 106   1          ADC_CONTR|=(ch & 0x0f);
 107   1      }
 108          
 109          void set_adc_result_format(u8 a)
 110          {
 111   1         if(a==0)
 112   1            ADCCFG &=0xDF;
 113   1         else
 114   1            ADCCFG |=0x20;
 115   1      }
 116          void set_adc_conv_speed(u8 a)
 117          {
C51 COMPILER V9.56.0.0   LED1602                                                           10/05/2017 17:53:02 PAGE 3   

 118   1         ADCCFG |=(a &0xf);
 119   1      }
 120          
 121          float get_voltage_value(void)
 122          {
 123   1        u16 tmp=0;
 124   1        float value;
 125   1        tmp=(ADC_RES*256+ADC_RESL);
 126   1        value=(tmp*2.5)/4096;
 127   1        return value;
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
